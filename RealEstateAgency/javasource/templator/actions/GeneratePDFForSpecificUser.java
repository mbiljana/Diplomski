// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package templator.actions;

import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.thirdparty.org.json.JSONObject;
import com.mendix.webui.CustomJavaAction;
import templator.proxies.Options;
import uk.gajd.templator4mx.Templator;

/**
 * Can be used in scheduled events.
 * 
 * See https://www.notion.so/gajduk/Templator-Docs-aa00c14bcb8946e8b3b9bb80e6dea2ce#0fda5b5a025b4b61ac040b011514e8f1 for more details.
 */
public class GeneratePDFForSpecificUser extends CustomJavaAction<java.lang.Boolean>
{
	private IMendixObject __PDFFile_;
	private system.proxies.FileDocument PDFFile_;
	private java.lang.String Microflow_;
	private IMendixObject Parameter_;
	private IMendixObject __CustomOptions_;
	private templator.proxies.Options CustomOptions_;
	private IMendixObject __User_;
	private system.proxies.User User_;

	public GeneratePDFForSpecificUser(IContext context, IMendixObject PDFFile_, java.lang.String Microflow_, IMendixObject Parameter_, IMendixObject CustomOptions_, IMendixObject User_)
	{
		super(context);
		this.__PDFFile_ = PDFFile_;
		this.Microflow_ = Microflow_;
		this.Parameter_ = Parameter_;
		this.__CustomOptions_ = CustomOptions_;
		this.__User_ = User_;
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		this.PDFFile_ = __PDFFile_ == null ? null : system.proxies.FileDocument.initialize(getContext(), __PDFFile_);

		this.CustomOptions_ = __CustomOptions_ == null ? null : templator.proxies.Options.initialize(getContext(), __CustomOptions_);

		this.User_ = __User_ == null ? null : system.proxies.User.initialize(getContext(), __User_);

		// BEGIN USER CODE
		return GeneratePDFForSpecificUser.generatePDF(getContext(), this.PDFFile_,  this.Microflow_, this.Parameter_, this.CustomOptions_, this.User_);
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "GeneratePDFForSpecificUser";
	}

	// BEGIN EXTRA CODE
	public static boolean generatePDF(IContext context, system.proxies.FileDocument PDFFile_,
			java.lang.String Microflow_, IMendixObject Parameter_,
			templator.proxies.Options CustomOptions_, system.proxies.User User_) throws CoreException {
		if ( Microflow_ == null ) throw new CoreException("Microflow is required");
		if ( PDFFile_ == null ) throw new CoreException("PDFFile is required");
		if ( context.getSession().isSystemSession() &&
				User_ == null ) {
			throw new CoreException("User has to be set when running in a system context");
		}
		Options opts = getCustomOptionsOrDefault(context, CustomOptions_);
		if ( Core.getConfiguration().getApplicationRootUrl().startsWith("http://localhost") && 
			 ( templator.proxies.constants.Constants.getApplicationURLOverrideOPTIONAL() == null ||
			 templator.proxies.constants.Constants.getApplicationURLOverrideOPTIONAL().isEmpty() ) ) {
			templator.proxies.microflows.Microflows.iVK_ShowPrintPagePrompt(context,
					Parameter_ != null ? Parameter_.getId().toLong()+"" : null,
					Microflow_,
					Parameter_ != null ? Parameter_.getMetaObject().getName() : null,
					opts);
			return false;
		}
		JSONObject marginJson = new JSONObject();
		marginJson.put("top", opts.getMarginTop());
		marginJson.put("right", opts.getMarginRight());
		marginJson.put("bottom", opts.getMarginBottom());
		marginJson.put("left", opts.getMarginLeft());
		
		JSONObject optionsJson = new JSONObject();
		optionsJson.put("scale", opts.getScale());
		optionsJson.put("displayHeaderFooter", opts.getDisplayHeaderFooter());
		optionsJson.put("headerTemplate", opts.getHeaderTemplate());
		optionsJson.put("footerTemplate", opts.getFooterTemplate());
		optionsJson.put("printBackground", opts.getPrintBackground());
		optionsJson.put("landscape",  opts.getLayout() == templator.proxies.ENUM_Layout.Landscape);
		optionsJson.put("pageRanges", opts.getPageRanges());
		optionsJson.put("format", opts.getPaperFormat());
		optionsJson.put("width", opts.getWidth());
		optionsJson.put("height", opts.getHeight());
		optionsJson.put("margin", marginJson);
		optionsJson.put("preferCSSPageSize", opts.getPreferCSSPageSize());
		optionsJson.put("hideControlElements", opts.getHideControlElements());
		optionsJson.put("hideDialogs", opts.getHideDialogs());
		optionsJson.put("hideValidations", opts.getHideValidations());
		optionsJson.put("disableBootstrapPrintStyling", opts.getDisableBootstrapPrintStyling());
		

		// to make available any recent database changes for the PDF generation
		int count = 0;
		while ( context.isInTransaction() ) {
			context.endTransaction();
			++count;
		}
		for ( int i = 0 ; i < count ; ++i ) {
			context.startTransaction();
		}
		
		Templator.INSTANCE.generateFromTemplate(
				optionsJson.toString(),
				User_ == null ? null : User_.getName(),
				User_ == null ? context.getSession() : null,
				Microflow_,
				Parameter_,
				templator.proxies.constants.Constants.getApplicationURLOverrideOPTIONAL(),
				templator.proxies.constants.Constants.getServiceEndpoint(),
				true,
				templator.proxies.constants.Constants.getEncryptionKey(),
				document -> {
					if ( templator.proxies.PDFFile.entityName.equals(PDFFile_.getMendixObject().getMetaObject().getName()) ) {
						PDFFile_.getMendixObject().setValue(context, 
								templator.proxies.PDFFile.MemberNames.PDFFile_User.toString(),
								User_ != null ? User_.getMendixObject().getId() : context.getSession().getUserId());
					}
					Core.storeFileDocumentContent(context, PDFFile_.getMendixObject(), document);
				},
				templator.proxies.constants.Constants.getServiceFunctionKey());
		
		return true;
	}

	private static Options getCustomOptionsOrDefault(IContext context, Options customOptions) {
		if ( customOptions == null )
			return new Options(context);
		return customOptions;
	} 
	// END EXTRA CODE
}
