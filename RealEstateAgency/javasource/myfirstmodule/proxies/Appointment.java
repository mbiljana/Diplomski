// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies;

public class Appointment
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject appointmentMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MyFirstModule.Appointment";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Date("Date"),
		is_available("is_available"),
		client_name("client_name"),
		client_phone("client_phone"),
		address("address"),
		Appointment_Agent("MyFirstModule.Appointment_Agent");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Appointment(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "MyFirstModule.Appointment"));
	}

	protected Appointment(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject appointmentMendixObject)
	{
		if (appointmentMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("MyFirstModule.Appointment", appointmentMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a MyFirstModule.Appointment");

		this.appointmentMendixObject = appointmentMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Appointment.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static myfirstmodule.proxies.Appointment initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return myfirstmodule.proxies.Appointment.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static myfirstmodule.proxies.Appointment initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new myfirstmodule.proxies.Appointment(context, mendixObject);
	}

	public static myfirstmodule.proxies.Appointment load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return myfirstmodule.proxies.Appointment.initialize(context, mendixObject);
	}

	public static java.util.List<myfirstmodule.proxies.Appointment> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<myfirstmodule.proxies.Appointment> result = new java.util.ArrayList<myfirstmodule.proxies.Appointment>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//MyFirstModule.Appointment" + xpathConstraint))
			result.add(myfirstmodule.proxies.Appointment.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Date
	 */
	public final java.util.Date getDate()
	{
		return getDate(getContext());
	}

	/**
	 * @param context
	 * @return value of Date
	 */
	public final java.util.Date getDate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.Date.toString());
	}

	/**
	 * Set value of Date
	 * @param date
	 */
	public final void setDate(java.util.Date date)
	{
		setDate(getContext(), date);
	}

	/**
	 * Set value of Date
	 * @param context
	 * @param date
	 */
	public final void setDate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date date)
	{
		getMendixObject().setValue(context, MemberNames.Date.toString(), date);
	}

	/**
	 * @return value of is_available
	 */
	public final java.lang.Boolean getis_available()
	{
		return getis_available(getContext());
	}

	/**
	 * @param context
	 * @return value of is_available
	 */
	public final java.lang.Boolean getis_available(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.is_available.toString());
	}

	/**
	 * Set value of is_available
	 * @param is_available
	 */
	public final void setis_available(java.lang.Boolean is_available)
	{
		setis_available(getContext(), is_available);
	}

	/**
	 * Set value of is_available
	 * @param context
	 * @param is_available
	 */
	public final void setis_available(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean is_available)
	{
		getMendixObject().setValue(context, MemberNames.is_available.toString(), is_available);
	}

	/**
	 * @return value of client_name
	 */
	public final java.lang.String getclient_name()
	{
		return getclient_name(getContext());
	}

	/**
	 * @param context
	 * @return value of client_name
	 */
	public final java.lang.String getclient_name(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.client_name.toString());
	}

	/**
	 * Set value of client_name
	 * @param client_name
	 */
	public final void setclient_name(java.lang.String client_name)
	{
		setclient_name(getContext(), client_name);
	}

	/**
	 * Set value of client_name
	 * @param context
	 * @param client_name
	 */
	public final void setclient_name(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String client_name)
	{
		getMendixObject().setValue(context, MemberNames.client_name.toString(), client_name);
	}

	/**
	 * @return value of client_phone
	 */
	public final java.lang.String getclient_phone()
	{
		return getclient_phone(getContext());
	}

	/**
	 * @param context
	 * @return value of client_phone
	 */
	public final java.lang.String getclient_phone(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.client_phone.toString());
	}

	/**
	 * Set value of client_phone
	 * @param client_phone
	 */
	public final void setclient_phone(java.lang.String client_phone)
	{
		setclient_phone(getContext(), client_phone);
	}

	/**
	 * Set value of client_phone
	 * @param context
	 * @param client_phone
	 */
	public final void setclient_phone(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String client_phone)
	{
		getMendixObject().setValue(context, MemberNames.client_phone.toString(), client_phone);
	}

	/**
	 * @return value of address
	 */
	public final java.lang.String getaddress()
	{
		return getaddress(getContext());
	}

	/**
	 * @param context
	 * @return value of address
	 */
	public final java.lang.String getaddress(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.address.toString());
	}

	/**
	 * Set value of address
	 * @param address
	 */
	public final void setaddress(java.lang.String address)
	{
		setaddress(getContext(), address);
	}

	/**
	 * Set value of address
	 * @param context
	 * @param address
	 */
	public final void setaddress(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String address)
	{
		getMendixObject().setValue(context, MemberNames.address.toString(), address);
	}

	/**
	 * @return value of Appointment_Agent
	 */
	public final myfirstmodule.proxies.Agent getAppointment_Agent() throws com.mendix.core.CoreException
	{
		return getAppointment_Agent(getContext());
	}

	/**
	 * @param context
	 * @return value of Appointment_Agent
	 */
	public final myfirstmodule.proxies.Agent getAppointment_Agent(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		myfirstmodule.proxies.Agent result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Appointment_Agent.toString());
		if (identifier != null)
			result = myfirstmodule.proxies.Agent.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Appointment_Agent
	 * @param appointment_agent
	 */
	public final void setAppointment_Agent(myfirstmodule.proxies.Agent appointment_agent)
	{
		setAppointment_Agent(getContext(), appointment_agent);
	}

	/**
	 * Set value of Appointment_Agent
	 * @param context
	 * @param appointment_agent
	 */
	public final void setAppointment_Agent(com.mendix.systemwideinterfaces.core.IContext context, myfirstmodule.proxies.Agent appointment_agent)
	{
		if (appointment_agent == null)
			getMendixObject().setValue(context, MemberNames.Appointment_Agent.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Appointment_Agent.toString(), appointment_agent.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return appointmentMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final myfirstmodule.proxies.Appointment that = (myfirstmodule.proxies.Appointment) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "MyFirstModule.Appointment";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
